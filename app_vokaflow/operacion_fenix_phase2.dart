import 'dart:io';

void main() async {
  print('ðŸ”¥ OPERACIÃ“N FÃ‰NIX - FASE 2: COMPLETAR MIGRACIÃ“N WIDGETS');
  
  // Lista de archivos que aÃºn necesitan correcciÃ³n
  final filesToFix = [
    'lib/features/enterprise/pages/ai_command_center_page.dart',
    'lib/features/teams/pages/teams_page.dart',
    'lib/features/meeting/pages/ai_meeting_page.dart',
    'lib/features/document/pages/smart_document_page.dart',
    'lib/features/enterprise/pages/integration_hub_page.dart',
    'lib/core/widgets/enterprise/settings_widgets.dart',
  ];
  
  for (final filePath in filesToFix) {
    final file = File(filePath);
    if (await file.exists()) {
      print('ðŸŽ¯ Corrigiendo widgets en: $filePath');
      String content = await file.readAsString();
      
      // CorrecciÃ³n final de widgets App â†’ Voka
      content = content.replaceAll('AppCard(', 'VokaCard(');
      content = content.replaceAll('AppInput(', 'VokaInput(');
      content = content.replaceAll('AppSkeleton(', 'VokaSkeleton(');
      content = content.replaceAll('AppDropdownMenu(', 'VokaDropdownMenu(');
      content = content.replaceAll('AppDropdownMenuItem(', 'VokaDropdownItem(');
      
      // CorrecciÃ³n de parÃ¡metros hintText â†’ hint
      content = content.replaceAll('hintText:', 'hint:');
      
      // CorrecciÃ³n de placeholder â†’ hint (otro caso)
      content = content.replaceAll('placeholder:', 'hint:');
      
      await file.writeAsString(content);
      print('âœ… Widgets corregidos en: $filePath');
    }
  }
  
  print('ðŸŽ‰ FASE 2 COMPLETADA - MigraciÃ³n de widgets finalizada!');
}
