import 'dart:io';

void main() async {
  print('üî• OPERACI√ìN F√âNIX - FASE 3: CIRUG√çA DE SINTAXIS CR√çTICA');
  
  final file = File('lib/features/enterprise/pages/integration_hub_page.dart');
  if (!await file.exists()) {
    print('‚ùå Archivo no encontrado');
    return;
  }
  
  String content = await file.readAsString();
  
  // Correcci√≥n 1: Par√°metros de widgets - corregir 'text:' en botones
  content = content.replaceAll(
    RegExp(r'TextButton\(\s*onPressed:\s*([^,]+),\s*child:\s*Text\(\s*text:\s*([^)]+)\)\s*\)'),
    'TextButton(onPressed: \$1, child: Text(\$2))'
  );
  
  content = content.replaceAll(
    RegExp(r'ElevatedButton\(\s*onPressed:\s*([^,]+),\s*child:\s*Text\(\s*text:\s*([^)]+)\)\s*\)'),
    'ElevatedButton(onPressed: \$1, child: Text(\$2))'
  );
  
  // Correcci√≥n 2: showDialog con par√°metros correctos
  content = content.replaceAll(
    'showDialog(',
    'showDialog(\n      context: context,'
  );
  
  // Correcci√≥n 3: Corregir par√°metros incorrectos en widgets
  content = content.replaceAll('conchild:', 'child:');
  content = content.replaceAll('text:', 'child: Text(');
  
  // Correcci√≥n 4: Corregir VokaInput hint
  content = content.replaceAll('hint: \'Buscar en logs...\'', 'hint: \'Buscar en logs...\'');
  
  await file.writeAsString(content);
  print('‚úÖ Cirug√≠a de sintaxis completada en integration_hub_page.dart');
  print('üéâ FASE 3 COMPLETADA!');
}
